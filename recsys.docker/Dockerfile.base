# syntax=docker/dockerfile:1

# ==================================================================
# 定义可配置的构建参数
# ==================================================================
ARG CUDA_VERSION=12.1.1
ARG CUDNN_VERSION=8
ARG UBUNTU_VERSION=22.04
ARG PYTHON_VERSION=3.10

# ==================================================================
# Stage 1: Base Image
#
# 这是只包含 Python 运行时和基本系统工具的镜像。
# ==================================================================
FROM nvidia/cuda:${CUDA_VERSION}-cudnn${CUDNN_VERSION}-runtime-ubuntu${UBUNTU_VERSION}

# 声明构建参数
ARG PYTHON_VERSION

# --- 设置环境 ---
ENV DEBIAN_FRONTEND=noninteractive \
    TZ=Etc/UTC \
    VIRTUAL_ENV=/opt/venv

# --- 安装 Python 运行时和所有增强的系统工具 ---
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    # Python
    python${PYTHON_VERSION} \
    python${PYTHON_VERSION}-venv \
    # Base
    ca-certificates \
    locales \
    # Version Control
    git \
    # Networking
    curl wget iputils-ping netcat openssh-client iproute2 dnsutils \
    # Monitoring & Debugging
    procps htop iotop lsof tmux strace gdb \
    # File & Editing
    vim nano mc tree findutils less jq ncdu \
    # Compression
    zip unzip p7zip-full \
    # Build Tools
    build-essential \
    # User & Shell
    sudo bash-completion man-db \
    && apt-get clean && \
    # 生成并设置 locale，防止编码问题
    echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen && \
    locale-gen en_US.UTF-8 && \
    rm -rf /var/lib/apt/lists/*

# --- 设置默认语言环境 ---
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US:en
ENV LC_ALL en_US.UTF-8

# --- 设置工作目录 ---
WORKDIR /app

# --- 默认启动命令为 bash ---
CMD ["bash"]
