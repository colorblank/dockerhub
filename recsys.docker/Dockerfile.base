# syntax=docker/dockerfile:1

# ==================================================================
# 定义可配置的构建参数
# ==================================================================
ARG PYTHON_VERSION=3.10
ARG CUDA_VERSION=12.1.1
ARG CUDNN_VERSION=8
ARG UBUNTU_VERSION=22.04


# ==================================================================
# Stage: Single Stage Development Build
#
# 目标: 创建一个功能齐全的开发环境，包含所有必需的开发工具、
# CUDA SDK、以及多版本的 Python 环境。
# ==================================================================
# 使用 '-devel' 镜像，它包含了完整的 CUDA SDK (编译器、库、头文件)
FROM nvidia/cuda:${CUDA_VERSION}-cudnn${CUDNN_VERSION}-devel-ubuntu${UBUNTU_VERSION}

# 声明构建参数
ARG PYTHON_VERSION

# --- 设置环境，避免交互式提示并配置默认语言 ---
ENV DEBIAN_FRONTEND=noninteractive \
    TZ=Etc/UTC \
    LANG=en_US.UTF-8 \
    LANGUAGE=en_US:en \
    LC_ALL=en_US.UTF-8

# --- 安装系统依赖、多版本 Python 和所有开发工具 ---
# 添加 'deadsnakes' PPA 以获取所有需要的 Python 版本
RUN apt-get update && \
    apt-get install -y --no-install-recommends software-properties-common && \
    add-apt-repository ppa:deadsnakes/ppa && \
    apt-get update && \
    apt-get install -y --no-install-recommends \
    # --- 构建工具 ---
    build-essential cmake curl git pkg-config \
    # --- 多版本 Python 运行时 (从 PPA 安装) ---
    python3.8 python3.8-dev python3.8-venv \
    python3.9 python3.9-dev python3.9-venv \
    python3.10 python3.10-dev python3.10-venv \
    python3.11 python3.11-dev python3.11-venv \
    python3.12 python3.12-dev python3.12-venv \
    # --- 基础工具和调试工具 ---
    bash-completion ca-certificates dnsutils findutils gdb \
    htop iotop iproute2 iputils-ping jq less lsof \
    locales man-db mc nano ncdu netcat openssh-client \
    p7zip-full procps python3-pip strace sudo tmux \
    tree unzip vim wget zip && \
    # --- 设置指定的 Python 版本为全局默认 ---
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 80 && \
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.9 90 && \
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.10 100 && \
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.11 110 && \
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.12 120 && \
    update-alternatives --set python3 /usr/bin/python${PYTHON_VERSION} && \
    # --- 设置语言环境 ---
    echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen && \
    locale-gen en_US.UTF-8 && \
    # --- 清理 apt 缓存 ---
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* && \
    ln -s /usr/bin/python3 /usr/bin/python

# --- 安装并配置 uv, ruff ---
ENV UV_INSTALL_DIR="/usr/local/bin"
ENV UV_TOOL_BIN_DIR="/usr/local/bin"
RUN curl -LsSf https://astral.sh/uv/install.sh | env UV_INSTALL_DIR="/usr/local/bin" sh && \
    uv tool install ruff@latest

# --- 设置工作目录 ---
WORKDIR /app

CMD ["/bin/bash"]
